{"version":3,"sources":["context.js","components/SearchForm.js","components/Cocktail.js","components/Loading.js","components/CocktailList.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","logo.svg","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","a","fetch","response","json","data","drinks","newCocktails","map","item","id","idDrink","name","strDrink","image","strDrinkThumb","info","strAlcoholic","glass","strGlass","useEffect","Provider","value","useGlobalContext","useContext","SearchForm","searchValue","useRef","current","focus","className","onSubmit","e","preventDefault","htmlFor","type","ref","onChange","Cocktail","src","alt","to","Loading","CocktailList","length","Home","About","url","SingleCocktail","useParams","cocktail","setcocktail","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","console","log","getCocktail","index","Error","Navbar","logo","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29fd9cf.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n\nconst url =\"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\"\n\nconst AppContext=React.createContext()\n\nconst AppProvider=({children})=>{\n    const [loading,setLoading]=useState(false)\n    const [searchTerm,setSearchTerm]= useState('a')\n    const [cocktails,setCocktails]=useState([])\n\n    const fetchDrinks = async()=>{\n        setLoading(true)\n        try{\n            const response=await fetch(`${url}${searchTerm}`)\n            const data= await response.json()\n            const { drinks }=data\n\n            if(drinks){\n                const newCocktails=drinks.map((item)=>{\n                    const { idDrink, strDrink, strDrinkThumb, strAlcoholic, strGlass }=item\n                    return{\n                        id:idDrink,\n                        name:strDrink,\n                        image:strDrinkThumb,\n                        info:strAlcoholic,\n                        glass:strGlass\n                    }\n                })\n                setCocktails(newCocktails)\n                \n            }else{\n                setCocktails([])\n            }\n            setLoading(false)\n        }catch(error){\n            setLoading(false)\n        }\n    }\n\n    useEffect(()=>{\n        fetchDrinks()\n        // eslint-disable-next-line\n    },[searchTerm])\n\n\n\n    return(\n        <AppContext.Provider\n            value={{loading,cocktails,setSearchTerm}}\n        >\n            {children}\n        </AppContext.Provider>\n    )\n}\nexport const useGlobalContext=()=>{\n    return useContext(AppContext)\n}\nexport {  AppContext, AppProvider }","import React from 'react'\nimport { useGlobalContext } from \"../context\";\n\nexport const SearchForm=()=>{\n    const { setSearchTerm }=useGlobalContext()\n    const searchValue=React.useRef()\n    \n    React.useEffect(()=>{\n        searchValue.current.focus()\n    },[])\n\n    const handlesubmit=(e)=>{\n        e.preventDefault()\n    }\n    \n    const searchCocktail=()=>{\n        setSearchTerm(searchValue.current.value)\n    }\n\n    return (\n    <section className=\"section search\">\n        <form className=\"search-form\" onSubmit={handlesubmit}>\n            <div className=\"form-control\">\n                <label htmlFor=\"name\">search your favourite cocktail</label>\n                <input \n                type=\"text\"\n                id=\"name\"\n                ref={searchValue}\n                onChange={searchCocktail}\n                />\n            </div>\n        </form>\n    </section>   \n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Cocktail=({image,id,name,info,glass})=>{\n    return(\n        <article className=\"cocktail\">\n            <div className=\"img-container\">\n                <img src={image} alt={name}/>\n            </div>\n            <div className=\"cocktail-footer\">\n                <h3>{name}</h3>\n                <h4>{glass}</h4>\n                <p>{info}</p>\n                <Link to={`/cocktail/${id}`} className=\"btn btn-primary\">\n                details</Link>\n            </div>\n        </article>\n    )\n}\n\nexport default Cocktail","import React from 'react'\n\nconst Loading=()=>{\n    return(\n        <div className=\"loading\">\n            {/* loading instead of section-title */}\n            <h2>Loading</h2>\n        </div>\n    )\n}\n\nexport default Loading;","import React from 'react'\nimport Cocktail from './Cocktail'\nimport Loading from './Loading'\nimport { useGlobalContext } from \"../context\";\n\nexport const CocktailList = () =>{\n    const { cocktails, loading }=useGlobalContext()\n\n    if (loading) {\n        return<Loading/>\n    }\n    if (cocktails.length<1) {\n        return(\n            <h2 className=\"section-title\">\n                no cocktails matched your search criteira\n            </h2>\n        )\n    }\n\n    return(\n        <section className=\"section\">\n            <h2 className=\"section-title\">\n                cocktails\n            </h2>\n            <div className=\"cocktails-center\">\n                {cocktails.map((item)=>{\n                    return <Cocktail key={item.id}{...item}/>\n                })}\n            </div>\n        </section>\n    )\n}\n","import React from 'react'\nimport { SearchForm } from \"../components/SearchForm\";\nimport { CocktailList } from \"../components/CocktailList\";\n\nconst Home=()=>{\n    return (   \n        <main>\n            <SearchForm/>\n            <CocktailList/>\n        </main>\n    )\n}\n\nexport default Home;","import React from 'react'\n\nconst About =()=>{\n    return(\n        <section className=\"section about-section\">\n            <h1 className=\"section-title\">about us</h1>\n            <p>\n                This program is free software: you can redistribute it or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n                This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n            </p>\n\n        </section>\n    )\n}\nexport default About;","import React, { useState } from 'react'\nimport Loading from '../components/Loading'\nimport { useParams,Link } from \"react-router-dom\";\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=\"\n// const url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\"\n\nconst SingleCocktail=()=>{\n    const {id}=useParams()\n    const [loading,setLoading]=useState(false)\n    const [cocktail,setcocktail]=useState(null)\n    \n    React.useEffect(()=>{\n        setLoading(true)\n        async function getCocktail() {\n            try {\n                const response = await fetch(`${url}${id}`)\n                const data = await response.json()\n                if(data.drinks){\n                    const{\n                        strDrink:name,\n                        strDrinkThumb:image,\n                        strAlcoholic:info,\n                        strCategory:category,\n                        strGlass:glass,\n                        strInstructions:instructions,\n                        strIngredient1,\n                        strIngredient2,\n                        strIngredient3,\n                        strIngredient4,\n                        strIngredient5,\n                    }=data.drinks[0]\n                    const ingredients=[strIngredient1,strIngredient2,strIngredient3,strIngredient4,strIngredient5,]\n                    const newCocktails={\n                        name,\n                        image,\n                        info,\n                        category,\n                        glass,\n                        instructions,\n                        ingredients\n                    }\n                    setcocktail(newCocktails)                    \n                }else{\n                    setcocktail(null)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        setLoading(false)\n        getCocktail()\n    },[id])\n\n    if (loading) {\n       return <Loading/>\n    }\n    if (!cocktail) {\n        return <h2 className=\"section-title\">no cocktail to display</h2>\n    }\n    // else{\n    //      const { name, image, info, category, glass, instructions, ingredients,}=cocktail\n    // }\n\n    return (\n        \n        <section className=\"section cocktail-section\">\n            <Link to=\"/\" className=\"btn btn-primary\">\n            back home\n            </Link>\n        <h2 className=\"section-title\">{cocktail.name}</h2>\n        <div className=\"drink\">\n            <img src={cocktail.image} alt={cocktail.name}/>\n        \n        <div className=\"drink-info\">\n            <p>\n                <span className=\"drink-data\">name :</span>{cocktail.name}\n            </p>\n            \n            <p>\n                <span className=\"drink-data\">category :</span>{cocktail.category}\n            </p>\n            \n            <p>\n                <span className=\"drink-data\">info :</span>{cocktail.info}\n            </p>\n            \n            <p>\n                <span className=\"drink-data\">glass :</span>{cocktail.glass}\n            </p>\n\n            <p>\n                <span className=\"drink-data\">instructions :</span>{cocktail.instructions}\n            </p>\n\n             <p>\n              <span className='drink-data'>ingredients :</span>\n              {cocktail.ingredients.map((item, index) => {\n                return item ? <span key={index}> {item}</span> : null\n              })}\n            </p>\n            </div>\n        </div>\n        </section>\n    )\n}\nexport default SingleCocktail;","import React from 'react'\nimport { Link } from \"react-router-dom\";\nconst Error =()=>{\n    return(\n        <section className=\"error-page section\">\n            <div className=\"error-container\">\n                <h1>oops! it's a dead end</h1>\n                <Link to=\"/home\" className=\"btn btn-primary\">\n                back home\n                </Link>\n            </div>\n        </section>\n    )\n}\nexport default Error;","export default __webpack_public_path__ + \"static/media/logo.5bb3b58e.svg\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport logo from '../logo.svg'\n\nconst Navbar=()=>{\n    return (\n        <nav className=\"navbar\">\n            <div className=\"nav-center\">\n                <Link to=\"/\">\n                    <img src={logo} alt=\"cocktail db logo\" className=\"logo\"/>\n                </Link>\n                <ul className=\"nav-links\">\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react'\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\";\n// import pages\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport SingleCocktail from './pages/SingleCocktail'\nimport Error from './pages/Error'\n// import components\nimport Navbar from './components/Navbar'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar/>\n      <Switch>\n        \n        <Route exact path=\"/home\">\n          <Home/>\n        </Route>\n\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"/cocktail/:id\">\n          <SingleCocktail />\n        </Route>\n\n        <Route path=\"*\">\n          <Error />\n        </Route>\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}